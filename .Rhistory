for (i in 1:nrow(blanks)) {
obs <- blanks[i,]
if (obs$state %in% usstates) {blanks[i,]$country <- "us"}
else if (obs$state %in% canstates) {blanks[i,]$country <- "ca"}
else next
}
unique(blanks$country)
us_blanks <- blanks %>%
filter(country == "us")
us_blanks
unique(us_blanks$country)
#ok ready to load back in
#binding in fixed data
ufo <- ufo %>%
rbind(us_blanks)
ufo <- ufo %>%
filter(country == "us") %>%
mutate(latitude = as.numeric(latitude)) %>%
filter(!is.na(longitude),
!is.na(latitude))
nrow(ufo)
unique(ufo$country)
nrow(ufo)
ufo <- ufo %>%
filter(!state %in% c("ak", "hi"))
nrow(ufo)
ufo <- ufo %>%
filter(!longitude == 0) %>%
filter(!latitude == 0)
nrow(ufo)
easties <- ufo %>%
filter(longitude > -67)
nrow(easties)
ufo <- ufo %>%
filter(longitude <= -67.2)
nrow(ufo)
southies <- ufo %>%
filter(latitude < 24.4)
northies <- ufo %>%
filter(latitude > 49)
ufo <- ufo %>%
filter(latitude >= 24.4) %>%
filter(latitude <49.5)
nrow(ufo)
#2010 and on
ufo$datetime
ufo <- ufo %>%
mutate(datetime = as.POSIXct(datetime, format = "%m/%d/%Y %H:%M"))
ufo <- ufo %>%
filter(datetime > "1999-01-01 02:30:00")
nrow(ufo)
ufo$shape
#setting blanks to NA in shape
ufo <- ufo %>%
mutate(across(c("shape"), ~ifelse(.=="", "unknown", as.character(.))))
unique(ufo$shape)
pat <- "([Ss]ilver)|([Gg]reen)|([Bb]lue)|([Aa]mber)|([Rr]ed)|([Oo]range)|([Oo]rangish)|([Ww]hite)|([Pp]urple)|([Yy]ellow)|([Cc]opper)|([Bb]lack)|([Ss]ilver)|([Bb]luish)|([Tt]urquoise)|([Tt]eal)|([Pp]ink)"
ufo <- ufo %>%
mutate(colors = str_extract(comments, pattern = pat)) %>%
mutate(colors = str_to_lower(colors))
ufo$colors[is.na(ufo$colors)] <- "colorless"
ufo <- ufo %>%
mutate(colors = as.factor(colors))
##map <- map %>%
##st_set_crs(st_crs(states))
#just IL data
il_ufo <- ufo %>%
filter(state == "il")
ufo <- ufo %>%
mutate(colors = as.character(colors))
ufo$colors[ufo$colors=="bluish"] <- "blue"
ufo$colors[ufo$colors=="orangish"] <- "orange"
uj <- ufo %>%
mutate(latitude = jitter(latitude, factor = 0.001),
longitude = jitter(longitude, factor = 0.001))
uj <- uj %>%
mutate(label = as.character(paste(colors, shape, strftime(datetime, "%m/%d/%Y"))))
head(uj$label)
ujc <- uj %>%
mutate(comments = str_replace_all(comments, "&#44", ",")) %>%
mutate(comments = str_replace_all(comments, "&quot;", "'")) %>%
mutate(comments = str_replace_all(comments, "&#33", "!")) %>%
mutate(comments = str_replace_all(comments, "&#39", "'"))
ujc
dups <- data.frame(table(c(round(ujc$longitude,digits=4))))
dup_longs <- dups %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 8) %>%
select(Var1)
for (row in 1:nrow(ujc)) {
var <- round(ujc$longitude[row], digits = 4)
if (var %in% dup_longs$Var1) {
ujc$longitude[row] <- jitter(ujc$longitude[row], factor = .006)
}
else next
}
dups <- data.frame(table(c(round(ujc$longitude,digits=4))))
dup_longs <- dups %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 8) %>%
select(Var1)
nrow(dup_longs)
dups <- data.frame(table(c(round(ujc$longitude,digits=4))))
dup_longs <- dups %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 7) %>%
select(Var1)
nrow(dup_longs)
for (row in 1:nrow(ujc)) {
var <- round(ujc$longitude[row], digits = 4)
if (var %in% dup_longs$Var1) {
ujc$longitude[row] <- jitter(ujc$longitude[row], factor = .006)
}
else next
}
dups <- data.frame(table(c(round(ujc$longitude,digits=4))))
dup_longs <- dups %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 7) %>%
select(Var1)
nrow(dup_longs)
dups <- data.frame(table(c(round(ujc$longitude,digits=4))))
dup_longs <- dups %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 6) %>%
select(Var1)
nrow(dup_longs)
for (row in 1:nrow(ujc)) {
var <- round(ujc$longitude[row], digits = 4)
if (var %in% dup_longs$Var1) {
ujc$longitude[row] <- jitter(ujc$longitude[row], factor = .006)
}
else next
}
dups <- data.frame(table(c(round(ujc$longitude,digits=4))))
dup_longs <- dups %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 6) %>%
select(Var1)
nrow(dup_longs)
dups <- data.frame(table(c(round(ujc$longitude,digits=4))))
dup_longs <- dups %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 5) %>%
select(Var1)
nrow(dup_longs)
for (row in 1:nrow(ujc)) {
var <- round(ujc$longitude[row], digits = 4)
if (var %in% dup_longs$Var1) {
ujc$longitude[row] <- jitter(ujc$longitude[row], factor = .005)
}
else next
}
dups <- data.frame(table(c(round(ujc$longitude,digits=4))))
dup_longs <- dups %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 5) %>%
select(Var1)
nrow(dup_longs)
dups <- data.frame(table(c(round(ujc$longitude,digits=4))))
dup_longs <- dups %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 4) %>%
select(Var1)
nrow(dup_longs)
for (row in 1:nrow(ujc)) {
var <- round(ujc$longitude[row], digits = 4)
if (var %in% dup_longs$Var1) {
ujc$longitude[row] <- jitter(ujc$longitude[row], factor = .005)
}
else next
}
dups <- data.frame(table(c(round(ujc$longitude,digits=4))))
dup_longs <- dups %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 4) %>%
select(Var1)
nrow(dup_longs)
dup_longs <- dups %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 3) %>%
select(Var1)
nrow(dup_longs)
dups <- data.frame(table(c(round(ujc$longitude,digits=4))))
dup_longs <- dups %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 3) %>%
select(Var1)
nrow(dup_longs)
for (row in 1:nrow(ujc)) {
var <- round(ujc$longitude[row], digits = 4)
if (var %in% dup_longs$Var1) {
ujc$longitude[row] <- jitter(ujc$longitude[row], factor = .004)
}
else next
}
dups <- data.frame(table(c(round(ujc$longitude,digits=4))))
dup_longs <- dups %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 3) %>%
select(Var1)
nrow(dup_longs)
dups <- data.frame(table(c(round(ujc$longitude,digits=4))))
dup_longs <- dups %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 2) %>%
select(Var1)
nrow(dup_longs)
for (row in 1:nrow(ujc)) {
var <- round(ujc$longitude[row], digits = 4)
if (var %in% dup_longs$Var1) {
ujc$longitude[row] <- jitter(ujc$longitude[row], factor = .004)
}
else next
}
dups <- data.frame(table(c(round(ujc$longitude,digits=4))))
dup_longs <- dups %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 1) %>%
select(Var1)
nrow(dup_longs)
for (row in 1:nrow(ujc)) {
var <- round(ujc$longitude[row], digits = 4)
if (var %in% dup_longs$Var1) {
ujc$longitude[row] <- jitter(ujc$longitude[row], factor = .003)
}
else next
}
dups <- data.frame(table(c(round(ujc$longitude,digits=4))))
dup_longs <- dups %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 1) %>%
select(Var1)
nrow(dup_longs)
dups <- data.frame(table(c(round(ujc$longitude,digits=4))))
dup_longs <- dups %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 1) %>%
select(Var1)
nrow(dup_longs)
for (row in 1:nrow(ujc)) {
var <- round(ujc$longitude[row], digits = 4)
if (var %in% dup_longs$Var1) {
ujc$longitude[row] <- jitter(ujc$longitude[row], factor = .003)
}
else next
}
dups <- data.frame(table(c(round(ujc$longitude,digits=4))))
dup_longs <- dups %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 1) %>%
select(Var1)
nrow(dup_longs)
duplat <- data.frame(table(c(round(ujc$latitude,digits=4))))
dup_lt <- duplat %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 8) %>%
select(Var1)
nrow(dup_lt)
for (row in 1:nrow(ujc)) {
var <- round(ujc$latitude[row], digits = 4)
if (var %in% dup_lt$Var1) {
ujc$latitude[row] <- jitter(ujc$latitude[row], factor = .006)
}
else next
}
duplat <- data.frame(table(c(round(ujc$latitude,digits=4))))
dup_lt <- duplat %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 8) %>%
select(Var1)
nrow(dup_lt)
duplat <- data.frame(table(c(round(ujc$latitude,digits=4))))
dup_lt <- duplat %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 7) %>%
select(Var1)
nrow(dup_lt)
duplat <- data.frame(table(c(round(ujc$latitude,digits=4))))
dup_lt <- duplat %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 7) %>%
select(Var1)
nrow(dup_lt)
for (row in 1:nrow(ujc)) {
var <- round(ujc$latitude[row], digits = 4)
if (var %in% dup_lt$Var1) {
ujc$latitude[row] <- jitter(ujc$latitude[row], factor = .006)
}
else next
}
duplat <- data.frame(table(c(round(ujc$latitude,digits=4))))
dup_lt <- duplat %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 6) %>%
select(Var1)
nrow(dup_lt)
for (row in 1:nrow(ujc)) {
var <- round(ujc$latitude[row], digits = 4)
if (var %in% dup_lt$Var1) {
ujc$latitude[row] <- jitter(ujc$latitude[row], factor = .006)
}
else next
}
duplat <- data.frame(table(c(round(ujc$latitude,digits=4))))
dup_lt <- duplat %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 6) %>%
select(Var1)
nrow(dup_lt)
duplat <- data.frame(table(c(round(ujc$latitude,digits=4))))
dup_lt <- duplat %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 5) %>%
select(Var1)
nrow(dup_lt)
for (row in 1:nrow(ujc)) {
var <- round(ujc$latitude[row], digits = 4)
if (var %in% dup_lt$Var1) {
ujc$latitude[row] <- jitter(ujc$latitude[row], factor = .005)
}
else next
}
duplat <- data.frame(table(c(round(ujc$latitude,digits=4))))
dup_lt <- duplat %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 4) %>%
select(Var1)
nrow(dup_lt)
for (row in 1:nrow(ujc)) {
var <- round(ujc$latitude[row], digits = 4)
if (var %in% dup_lt$Var1) {
ujc$latitude[row] <- jitter(ujc$latitude[row], factor = .005)
}
else next
}
duplat <- data.frame(table(c(round(ujc$latitude,digits=4))))
dup_lt <- duplat %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 4) %>%
select(Var1)
nrow(dup_lt)
duplat <- data.frame(table(c(round(ujc$latitude,digits=4))))
dup_lt <- duplat %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 3) %>%
select(Var1)
nrow(dup_lt)
for (row in 1:nrow(ujc)) {
var <- round(ujc$latitude[row], digits = 4)
if (var %in% dup_lt$Var1) {
ujc$latitude[row] <- jitter(ujc$latitude[row], factor = .005)
}
else next
}
duplat <- data.frame(table(c(round(ujc$latitude,digits=4))))
dup_lt <- duplat %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 3) %>%
select(Var1)
nrow(dup_lt)
duplat <- data.frame(table(c(round(ujc$latitude,digits=4))))
dup_lt <- duplat %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 2) %>%
select(Var1)
nrow(dup_lt)
for (row in 1:nrow(ujc)) {
var <- round(ujc$latitude[row], digits = 4)
if (var %in% dup_lt$Var1) {
ujc$latitude[row] <- jitter(ujc$latitude[row], factor = .004)
}
else next
}
duplat <- data.frame(table(c(round(ujc$latitude,digits=4))))
dup_lt <- duplat %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 2) %>%
select(Var1)
nrow(dup_lt)
for (row in 1:nrow(ujc)) {
var <- round(ujc$latitude[row], digits = 4)
if (var %in% dup_lt$Var1) {
ujc$latitude[row] <- jitter(ujc$latitude[row], factor = .004)
}
else next
}
duplat <- data.frame(table(c(round(ujc$latitude,digits=4))))
dup_lt <- duplat %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 2) %>%
select(Var1)
nrow(dup_lt)
duplat <- data.frame(table(c(round(ujc$latitude,digits=4))))
dup_lt <- duplat %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 1) %>%
select(Var1)
nrow(dup_lt)
for (row in 1:nrow(ujc)) {
var <- round(ujc$latitude[row], digits = 4)
if (var %in% dup_lt$Var1) {
ujc$latitude[row] <- jitter(ujc$latitude[row], factor = .004)
}
else next
}
duplat <- data.frame(table(c(round(ujc$latitude,digits=4))))
dup_lt <- duplat %>%
filter(Freq > 1) %>%
arrange(Freq) %>%
filter(Freq > 1) %>%
select(Var1)
nrow(dup_lt)
il_ufo_map <- leaflet(ujc) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addTiles("CartoDB.DarkMatter") %>%
addCircleMarkers(lng = ~longitude,
lat = ~latitude,
popup=il_ufo$label, weight = 3, radius=4,
color=~cov2(colors), stroke = F, fillOpacity = 0.6)
cov2 <- colorFactor(palette = c("#FF0A33", "#FFFFFF", "#DEDEE3","#FFAD62","#6CC678","#F49097","#CF8D4F", "#D5EBEB","#2BA3DE", "#5D5B5D", "#F5E960","#FFC833","#C3B2FB", "#00AEB8","#44DFCD"),
levels = c("red", "white", "colorless", "orange", "green", "pink", "copper", "silver", "blue", "black", "yellow", "amber", "purple", "teal", "turquoise"))
uf <- leaflet(ujc) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addTiles("CartoDB.DarkMatter") %>%
addCircleMarkers(lng = ~longitude,
lat = ~latitude,
popup=il_ufo$label, weight = 3, radius=4,
color=~cov2(colors), stroke = F, fillOpacity = 0.6)
uf
write.csv(ujc, file = "usa_ufo")
nrow(ujc)
setwd("~/Documents/Codes/ufo/ufoapp/ufoapp")
setwd("~/Documents/Codes/ufo/ufoapp/ufoapp")
ufo <- read.csv("~/Documents/Codes/ufo/usa_ufo")
head(ufo)
cov2 <- colorFactor(palette = c("#FF0A33", "#FFFFFF", "#DEDEE3","#FFAD62","#6CC678","#F49097","#CF8D4F", "#D5EBEB","#2BA3DE", "#5D5B5D", "#F5E960","#FFC833","#C3B2FB", "#00AEB8","#44DFCD"),
levels = c("red", "white", "colorless", "orange", "green", "pink", "copper", "silver", "blue", "black", "yellow", "amber", "purple", "teal", "turquoise"))
runApp()
unique(ujc$state)
lakes <- c("oh", "il", "in", "mi", "mn", "pa")
glakes <- ujc %>%
filter(state %in% lakes)
nrow(glakes)
write.csv(glakes, file = "glakes_ufo.csv")
setwd("~/Documents/Codes/ufo/ufoapp/ufoapp")
ufo <- read.csv("glakes_ufo.csv")
cov2 <- colorFactor(palette = c("#FF0A33", "#FFFFFF", "#DEDEE3","#FFAD62","#6CC678","#F49097","#CF8D4F", "#D5EBEB","#2BA3DE", "#5D5B5D", "#F5E960","#FFC833","#C3B2FB", "#00AEB8","#44DFCD"),
levels = c("red", "white", "colorless", "orange", "green", "pink", "copper", "silver", "blue", "black", "yellow", "amber", "purple", "teal", "turquoise"))
runApp()
runApp()
lakes <- c("oh", "il", "in", "mi", "mn", "pa", "wi")
glakes <- ujc %>%
filter(state %in% lakes)
nrow(glakes)
write.csv(glakes, file = "glakes_ufo.csv")
ufo <- read.csv("glakes_ufo.csv")
cov2 <- colorFactor(palette = c("#FF0A33", "#FFFFFF", "#DEDEE3","#FFAD62","#6CC678","#F49097","#CF8D4F", "#D5EBEB","#2BA3DE", "#5D5B5D", "#F5E960","#FFC833","#C3B2FB", "#00AEB8","#44DFCD"),
levels = c("red", "white", "colorless", "orange", "green", "pink", "copper", "silver", "blue", "black", "yellow", "amber", "purple", "teal", "turquoise"))
runApp()
setwd("~/Documents/Codes/ufo/ufoapp/ufoapp")
ufo <- read.csv("~/Documents/Codes/ufo/clean_il_ufo")
cov2 <- colorFactor(palette = c("#FF0A33", "#FFFFFF", "#DEDEE3","#FFAD62","#6CC678","#F49097","#CF8D4F", "#D5EBEB","#2BA3DE", "#5D5B5D", "#F5E960","#FFC833","#C3B2FB", "#00AEB8","#44DFCD"),
levels = c("red", "white", "colorless", "orange", "green", "pink", "copper", "silver", "blue", "black", "yellow", "amber", "purple", "teal", "turquoise"))
runApp()
ufo <- read.csv("clean_il_ufo")
setwd("~/Documents/Codes/ufo/ufoapp/ufoapp")
ufo <- read.csv("clean_il_ufo")
cov2 <- colorFactor(palette = c("#FF0A33", "#FFFFFF", "#DEDEE3","#FFAD62","#6CC678","#F49097","#CF8D4F", "#D5EBEB","#2BA3DE", "#5D5B5D", "#F5E960","#FFC833","#C3B2FB", "#00AEB8","#44DFCD"),
levels = c("red", "white", "colorless", "orange", "green", "pink", "copper", "silver", "blue", "black", "yellow", "amber", "purple", "teal", "turquoise"))
runApp()
shiny::runApp()
setwd("~/Documents/Codes/ufo/ufoapp")
ufo <- read.csv("clean_il_ufo")
runApp()
runApp()
runApp()
setwd("~/Documents/Codes/ufo/ufoapp")
runApp()
